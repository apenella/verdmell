[2016-03-19 17:46:00  DEBUG: (currentContext::validatecurrentContext) validation current context]
[2016-03-19 17:46:00  DEBUG: (currentContext::validatecurrentContext) configFolder: ./conf.d]
[2016-03-19 17:46:00  DEBUG: (currentContext::validatecurrentContext) configFile: config.json]
[2016-03-19 17:46:00  DEBUG: (currentContext::validatecurrentContext) execution mode: cluster]
[2016-03-19 17:46:00  DEBUG: (currentContext::validatecurrentContext) service: ]
[2016-03-19 17:46:00  DEBUG: (currentContext::validatecurrentContext) execute check: ]
[2016-03-19 17:46:00  DEBUG: (currentContext::validatecurrentContext) execute checkgroup: ]
[2016-03-19 17:46:00  DEBUG: (currentContext::validatecurrentContext) execute IP: 0.0.0.0]
[2016-03-19 17:46:00  DEBUG: (currentContext::validatecurrentContext) execute port: 5497]
[2016-03-19 17:46:00  DEBUG: {"checksfolder":"./conf.d/checks","Servicesfolder":"./conf.d/services","hostname":"apenella","ip":"0.0.0.0","cluster":{"apenella":"http://0.0.0.0:5497","apenella1":"http://0.0.0.0:15497","apenella12":"http://2.2.2.2:5497"}}]
[2016-03-19 17:46:00  DEBUG: (Environment::GetSetup)]
[2016-03-19 17:46:00  DEBUG: (setupObject::validateChecksfolder) './conf.d/checks']
[2016-03-19 17:46:00  DEBUG: (setupObject::validateServicesfolder) './conf.d/services']
[2016-03-19 17:46:00  DEBUG: (setupObject::validateHostInfo) 'apenella']
[2016-03-19 17:46:00  DEBUG: (Environment::NewEnvironment) Node environment ready...]
[2016-03-19 17:46:00  DEBUG: (Environment::GetContext)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetOutput)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::NewClusterEngine)]
[2016-03-19 17:46:00  DEBUG: (Cluster::NewCluster)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::SetCluster) Set value '{"nodes":null,"services":null}']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::NewClusterEngine) There are some nodes defined by user.]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::NewClusterNode)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetName) Set value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetURL) Set value 'http://0.0.0.0:5497']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetCandidateForDelation)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::AddNode) Add node 'apenella' to cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::AddNode) Add node 'apenella' to cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::AddNode) Initializing cluster's Nodes]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::NewClusterEngine) Node 'apenella' has been added into the cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::NewClusterNode)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetName) Set value 'apenella1']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetURL) Set value 'http://0.0.0.0:15497']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetCandidateForDelation)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::AddNode) Add node 'apenella1' to cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::AddNode) Add node 'apenella1' to cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::NewClusterEngine) Node 'apenella1' has been added into the cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::NewClusterNode)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetName) Set value 'apenella12']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetURL) Set value 'http://2.2.2.2:5497']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::SetCandidateForDelation)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::AddNode) Add node 'apenella12' to cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::AddNode) Add node 'apenella12' to cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::NewClusterEngine) Node 'apenella12' has been added into the cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::NewClusterEngine) Cluster nodes '{"nodes":{"apenella":{"name":"apenella","URL":"http://0.0.0.0:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella1":{"name":"apenella1","URL":"http://0.0.0.0:15497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella12":{"name":"apenella12","URL":"http://2.2.2.2:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false}},"services":null}']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::StartReceiver) Starting services receiver]
[2016-03-19 17:46:00  DEBUG: (Environment::SetClusterEngine)]
[2016-03-19 17:46:00  INFO: (ClusterEngine::NewClusterEngine) I'm your new Cluster Engine instance.]
[2016-03-19 17:46:00  DEBUG: (SampleEngine::NewSampleEngine)]
[2016-03-19 17:46:00  DEBUG: (SampleEngine::StartSampleReceiver) Starting sample receiver]
[2016-03-19 17:46:00  DEBUG: (Environment::SetSampleEngine)]
[2016-03-19 17:46:00  INFO: (SampleEngine::NewSampleEngine) Hi! I'm your new sample engine instance]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::NewCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetSampleEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks) File found: ./conf.d/checks/checks.json]
[2016-03-19 17:46:00  DEBUG: (Checks::UnmarshalCheck)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks) The interval time for 'third' has not been defined properly and will be overwritten]
[2016-03-19 17:46:00  INFO: (Checks::RetrieveChecks) Check 'third' defined]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks) '{"name":"third","description":"The number three","command":"./conf.d/scripts/random.sh 4 third","depend":["first"],"expirationTime":30,"interval":30,"timestamp":0}']
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks::routine) New check to register 'third']
[2016-03-19 17:46:00  DEBUG: (CheckObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks::routine) New check to register 'forth']
[2016-03-19 17:46:00  INFO: (Checks::RetrieveChecks) Check 'forth' defined]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks) '{"name":"forth","description":"The number four","command":"./conf.d/scripts/verdmelltest.sh 0 0 forth","depend":["first","second","third"],"expirationTime":0,"interval":20,"timestamp":0}']
[2016-03-19 17:46:00  DEBUG: (CheckObject::SetTimestamp)]
[2016-03-19 17:46:00  INFO: (Checks::RetrieveChecks) Check 'eleventh' defined]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks::routine) New check to register 'eleventh']
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks) '{"name":"eleventh","description":"The number eleven","command":"./conf.d/scripts/random.sh 4 eleventh","depend":["first","third"],"expirationTime":0,"interval":30,"timestamp":0}']
[2016-03-19 17:46:00  DEBUG: (CheckObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks) The interval time for 'first' has not been defined properly and will be overwritten]
[2016-03-19 17:46:00  INFO: (Checks::RetrieveChecks) Check 'first' defined]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks) '{"name":"first","description":"The number one","command":"./conf.d/scripts/random.sh 4 first","depend":["second"],"expirationTime":30,"interval":30,"timestamp":0}']
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks::routine) New check to register 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks::routine) New check to register 'second']
[2016-03-19 17:46:00  INFO: (Checks::RetrieveChecks) Check 'second' defined]
[2016-03-19 17:46:00  DEBUG: (Checks::RetrieveChecks) '{"name":"second","description":"The number two","command":"./conf.d/scripts/random.sh 4 second","depend":null,"expirationTime":15,"interval":15,"timestamp":0}']
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'third']
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'third' is correct]
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'forth']
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'eleventh']
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'second']
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'forth' is correct]
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'eleventh' is correct]
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'first' is correct]
[2016-03-19 17:46:00  DEBUG: (CheckObject::ValidateCheckObject) Check 'second' is correct]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::SetChecks) Set value '{"checks":{"eleventh":{"name":"eleventh","description":"The number eleven","command":"./conf.d/scripts/random.sh 4 eleventh","depend":["first","third"],"expirationTime":0,"interval":30,"timestamp":0},"first":{"name":"first","description":"The number one","command":"./conf.d/scripts/random.sh 4 first","depend":["second"],"expirationTime":30,"interval":30,"timestamp":0},"forth":{"name":"forth","description":"The number four","command":"./conf.d/scripts/verdmelltest.sh 0 0 forth","depend":["first","second","third"],"expirationTime":0,"interval":20,"timestamp":0},"second":{"name":"second","description":"The number two","command":"./conf.d/scripts/random.sh 4 second","depend":null,"expirationTime":15,"interval":15,"timestamp":0},"third":{"name":"third","description":"The number three","command":"./conf.d/scripts/random.sh 4 third","depend":["first"],"expirationTime":30,"interval":30,"timestamp":0}}}']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::GetChecks) Get value]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::InitCheckRunningQueues) CheckQueue for 'third']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) Starting queue for check 'third']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::InitCheckRunningQueues) CheckQueue for 'forth']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::InitCheckRunningQueues) CheckQueue for 'eleventh']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::InitCheckRunningQueues) CheckQueue for 'first']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::InitCheckRunningQueues) CheckQueue for 'second']
[2016-03-19 17:46:00  DEBUG: (Checkgroups::RetrieveCheckGroups) File found: ./conf.d/checks/checks.json]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) Starting queue for check 'forth']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) Starting queue for check 'eleventh']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) Starting queue for check 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) Starting queue for check 'second']
[2016-03-19 17:46:00  DEBUG: checkgroups (Checkgroups::UnmarshalCheckgroup)]
[2016-03-19 17:46:00  DEBUG: (Checkgroups::GetCheckgroup) Get checkgroup]
[2016-03-19 17:46:00  INFO: (Checkgroups::RetrieveCheckGroups) Checkgroup 'ordinals' defined]
[2016-03-19 17:46:00  DEBUG: (Checkgroups::mergeCheckgroups) New checkgroup: ordinals]
[2016-03-19 17:46:00  DEBUG: (Checkgroups::SetCheckgroup) Set checkgroup]
[2016-03-19 17:46:00  DEBUG: (Checkgroups::ValidateCheckgroups) Validate checkgroups]
[2016-03-19 17:46:00  DEBUG: (Checkgroups::GetCheckgroup) Get checkgroup]
[2016-03-19 17:46:00  DEBUG: (Checkgroups::GetCheckgroup) Get checkgroup]
[2016-03-19 17:46:00  DEBUG: (Checkgroups::GetCheckgroup) Get checkgroup]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::SetCheckgroups) Set value '{"checkgroups":{"ordinals":["first","eleventh"]}}']
[2016-03-19 17:46:00  DEBUG: (Environment::SetCheckEngine)]
[2016-03-19 17:46:00  INFO: (CheckEngine::NewCheckEngine) Hi! I'm your new check engine instance]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::NewServiceEngine)]
[2016-03-19 17:46:00  DEBUG: (Services::RetrieveServices) File found: ./conf.d/services/services.json]
[2016-03-19 17:46:00  DEBUG: (Services::UnmarshalServices)]
[2016-03-19 17:46:00  INFO: (Services::RetrieveServices) Service 'units' defined]
[2016-03-19 17:46:00  DEBUG: (Services::RetrieveServices) '{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":-1,"timestamp":0}']
[2016-03-19 17:46:00  DEBUG: (Services::RetrieveServices::routine) New service to register 'units']
[2016-03-19 17:46:00  DEBUG: (Services::RetrieveServices::routine) New service to register 'dozens']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) Waiting samles for service 'units']
[2016-03-19 17:46:00  INFO: (Services::RetrieveServices) Service 'dozens' defined]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) Waiting samles for service 'dozens']
[2016-03-19 17:46:00  DEBUG: (Services::RetrieveServices) '{"name":"dozens","description":"Numbers from 10-99","checks":["eleventh"],"status":-1,"timestamp":0}']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) for service 'dozens']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'eleventh' used for service 'dozens']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'first' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'second' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'eleventh' used for service 'dozens']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'third' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'forth' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'first' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'second' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'third' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'forth' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::ValidateServices::routine) Validating services 'dozens']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Services::ValidateServices::routine) Validating services 'units']
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: third]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: forth]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: eleventh]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: first]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: third]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: second]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::ValidateServiceObject) The service 'dozens' has been properly validated]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: forth]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: eleventh]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: first]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: second]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::ValidateServiceObject) The service 'units' has been properly validated]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::NewServiceEngine) Registering service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: third]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: forth]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: eleventh]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: first]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: second]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::RegisterService) New service to register 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: third]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: forth]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: eleventh]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: first]
[2016-03-19 17:46:00  DEBUG: (Checks::ListCheckNames) check name: second]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::ValidateServiceObject) The service 'apenella' has been properly validated]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::NewServiceObject) {"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":-1,"timestamp":0}]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) Waiting samles for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'third' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) for service 'dozens']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'forth' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'eleventh' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'first' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'eleventh' used for service 'dozens']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'first' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'second' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'second' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'eleventh' used for service 'dozens']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'third' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'third' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'forth' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceMap) The check 'forth' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'eleventh' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'first' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'second' used for service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'second' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'third' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'forth' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (Services::GenerateCheckServices::generateChecksServiceReduce) The 'first' used for service 'units']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::RegisterService) Service 'apenella' registered properly]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) Starting sample receiver]
[2016-03-19 17:46:00  DEBUG: (Environment::SetServiceEngine)]
[2016-03-19 17:46:00  INFO: (ServiceEngine::NewServiceEngine) Hi! I'm your new service engine instance]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetInputChannel)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::AddOutputChannel)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::GetOutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::AddOutputChannel)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::GetoutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::AddOutputChannel)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::GetoutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::NewApiEngine)]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::GenerateAPIRoutes)]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::GenerateAPIRoutesForCheck)]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::GenerateAPIRoutesForService)]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::GenerateAPIRoutesForSamples)]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::GenerateAPIRoutesForService)]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::GenerateAPIRoutesForCheck)]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::AddRoute) Add new route]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::StartCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::GetChecks) Get value]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) Ready to start all pools for checks]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) Initializing tasks for 'forth''s pool]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'forth']
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) Initializing tasks for 'eleventh''s pool]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) Initializing tasks for 'first''s pool]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) Initializing tasks for 'second''s pool]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) Initializing tasks for 'third''s pool]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) waiting for tasks 5 to be finished]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'forth' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'eleventh']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'third']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'eleventh' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'third']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'second' hasn't dependencies]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'third' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'forth' has a dependency to 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'forth' has a dependency to 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'forth' has a dependency to 'third']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'third']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has a dependency to 'second']
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'third']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'eleventh' has a dependency to 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'eleventh' has a dependency to 'third']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'third' has a dependency to 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'third']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started. The check'second' has not a sample]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartCheckObjectTask) Running a check: second]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'first']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'second' hasn't dependencies]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'third' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'second' hasn't dependencies]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'third' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has a dependency to 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartCheckObjectTask) Exit status for 'second': 2]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has a dependency to 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'third' has a dependency to 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has a dependency to 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'third' has a dependency to 'first']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'second' hasn't dependencies]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'first']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'second' hasn't dependencies]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'second' hasn't dependencies]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has dependencies]
[2016-03-19 17:46:00  INFO: (CheckObject::StartCheckObjectTask) [2016-03-19 17:46:44.852640657 +0100 CET] New sample generated for 'second' at time '0']
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has dependencies]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has a dependency to 'second']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::sendSample)[0] Send sample for 'second' check with exit '2']
[2016-03-19 17:46:00  DEBUG: (Checks::GetCheckObjectByName) Looking for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'first' has a dependency to 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Environment::GetSampleEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (SampleEngine::GetSample) 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'second' hasn't dependencies]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'second' hasn't dependencies]
[2016-03-19 17:46:00  DEBUG: (SampleEngine::GetSample) There is not a sample for the check 'second']
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'second']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::GetoutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels) [0] Writing sample 'second' with exit '2' into channel]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels) [0] Writing sample 'second' with exit '2' into channel]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask finished. The exit code for 'second' is '2']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) New sample received for 'second']
[2016-03-19 17:46:00  DEBUG: (SampleEngine::StartSampleReceiver) New sample received for 'second']
[2016-03-19 17:46:00  DEBUG: (SampleEngine::AddSample) [0]' second']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started and won't be started again. The check 'second' alreadey has a sample]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) Sample for 'second' belongs to 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::sampleExpiration) Countdown for second's sample]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::scheduleCheckTask) Scheduling a new task for 'second'. It will be launched 15s latter.]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'second': '2']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started and won't be started again. The check 'second' alreadey has a sample]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) Sample for 'second' belongs to 'units']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'second': '2']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SendToSampleChannel) New sample to send for 'second' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started and won't be started again. The check 'second' alreadey has a sample]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools)[0] End of task has been notified for 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'second': '2']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SendToSampleChannel) New sample to send for 'second' to service 'units']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started and won't be started again. The check 'second' alreadey has a sample]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) New sample arrived for 'second' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) The 'second' status has changed, and service status have to be calculated.]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'second': '2']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started and won't be started again. The check 'second' alreadey has a sample]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) New sample arrived for 'second' to service 'units']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) The 'second' status has changed, and service status have to be calculated.]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'second': '2']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Calculating 'second' status to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started and won't be started again. The check 'second' alreadey has a sample]
[2016-03-19 17:46:00  WARN: (Checks::InitCheckTasks) Wrong status for 'first' because it depends to another check with ERROR status]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'second': '2']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Calculating 'second' status to service 'units']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Service 'apenella' has changed its status to 'ERROR']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started and won't be started again. The check 'second' alreadey has a sample]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  WARN: (Checks::InitCheckTasks) Wrong status for 'first' because it depends to another check with ERROR status]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'second': '2']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Service 'units' has changed its status to 'ERROR']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  WARN: (Checks::InitCheckTasks) Wrong status for 'first' because it depends to another check with ERROR status]
[2016-03-19 17:46:00  WARN: (Checks::InitCheckTasks) Wrong status for 'first' because it depends to another check with ERROR status]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'second': '2']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  WARN: (Checks::InitCheckTasks) Wrong status for 'first' because it depends to another check with ERROR status]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools)[0] End of task has been notified for 'first']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  WARN: (Checks::InitCheckTasks) Wrong status for 'first' because it depends to another check with ERROR status]
[2016-03-19 17:46:00  DEBUG: (Environment::GetServiceEngine)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'first']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The 'third''s dependencies has been already executed]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'third']
[2016-03-19 17:46:00  DEBUG: (Environment::GetServiceEngine)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::GetOutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'first']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::GetOutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The 'third''s dependencies has been already executed]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started. The check'third' has not a sample]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus) [1] Writing service status 'units' with status '2' into channel]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus) [1] Writing service status 'apenella' with status '2' into channel]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'third']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartCheckObjectTask) Running a check: third]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The 'third''s dependencies has been already executed]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'third']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::StartReceiver) Received]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartCheckObjectTask) Exit status for 'third': 3]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetCluster) Get value '{"nodes":{"apenella":{"name":"apenella","URL":"http://0.0.0.0:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella1":{"name":"apenella1","URL":"http://0.0.0.0:15497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella12":{"name":"apenella12","URL":"http://2.2.2.2:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false}},"services":null}']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'third']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  INFO: (CheckObject::StartCheckObjectTask) [2016-03-19 17:46:44.865708588 +0100 CET] New sample generated for 'third' at time '0']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetNode) Retrieve node 'apenella' from cluster]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::sendSample)[0] Send sample for 'third' check with exit '-1']
[2016-03-19 17:46:00  DEBUG: (Environment::GetSampleEngine)]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetService) Retrieve service 'units' from cluster]
[2016-03-19 17:46:00  DEBUG: (SampleEngine::GetSample) 'third']
[2016-03-19 17:46:00  DEBUG: (SampleEngine::GetSample) There is not a sample for the check 'third']
[2016-03-19 17:46:00  DEBUG: (Cluster::GetService) Service 'units' does not exit on the cluster]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::GetoutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels) [0] Writing sample 'third' with exit '-1' into channel]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels) [0] Writing sample 'third' with exit '-1' into channel]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) Create new service 'units' on cluster node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) New sample received for 'third']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) Sample for 'third' belongs to 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask finished. The exit code for 'third' is '-1']
[2016-03-19 17:46:00  DEBUG: (ClusterService::NewClusterService)]
[2016-03-19 17:46:00  DEBUG: (SampleEngine::StartSampleReceiver) New sample received for 'third']
[2016-03-19 17:46:00  DEBUG: (SampleEngine::AddSample) [0]' third']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) Sample for 'third' belongs to 'units']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started. The check'third' has not a sample]
[2016-03-19 17:46:00  DEBUG: (ClusterService::SetName) Set value 'units']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SendToSampleChannel) New sample to send for 'third' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::sampleExpiration) Countdown for third's sample]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::scheduleCheckTask) Scheduling a new task for 'third'. It will be launched 30s latter.]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'third': '-1']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartCheckObjectTask) Running a check: third]
[2016-03-19 17:46:00  DEBUG: (ClusterService::SetCandidateForDelation)]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) New sample arrived for 'third' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) The 'third' status has changed, and service status have to be calculated.]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SendToSampleChannel) New sample to send for 'third' to service 'units']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::AddService) Add service 'units' to cluster]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools)[0] End of task has been notified for 'third']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Calculating 'third' status to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Cluster::AddService) Add service 'units' to cluster]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'third']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) New sample arrived for 'third' to service 'units']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Service 'apenella' has changed its status to 'ERROR']
[2016-03-19 17:46:00  DEBUG: (Cluster::AddService) Initializing cluster's Nodes]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  INFO: (CheckObject::StartCheckObjectTask) [2016-03-19 17:46:44.877858107 +0100 CET] New sample generated for 'third' at time '0']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) The 'third' status has changed, and service status have to be calculated.]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::sendSample)[0] Send sample for 'third' check with exit '0']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Calculating 'third' status to service 'units']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) ServiceObject received[node:apenella, service:units, service timestamp:1, numchecks:4]]
[2016-03-19 17:46:00  DEBUG: (Environment::GetSampleEngine)]
[2016-03-19 17:46:00  DEBUG: (SampleEngine::GetSample) 'third']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Service 'units' has changed its status to 'ERROR']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) units]
[2016-03-19 17:46:00  DEBUG: (Environment::GetServiceEngine)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask finished. The exit code for 'third' is '0']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::GetOutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started and won't be started again. The check 'third' alreadey has a sample]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) Service 'units' does not exit on node apenella]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::sampleExpiration) Countdown for third's sample]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::scheduleCheckTask) Scheduling a new task for 'third'. It will be launched 30s latter.]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'third': '0']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus) [2] Writing service status 'apenella' with status '2' into channel]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'third': '0']
[2016-03-19 17:46:00  DEBUG: (Environment::GetServiceEngine)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) Add new service 'units' on cluster node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::GetOutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  WARN: (Checks::InitCheckTasks) Wrong status for 'forth' because it depends to another check with ERROR status]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The 'eleventh''s dependencies has been already executed]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus) [2] Writing service status 'units' with status '2' into channel]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::AddService) Add service 'units' on node 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'eleventh']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) units]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'forth']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started. The check'eleventh' has not a sample]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartCheckObjectTask) Running a check: eleventh]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) Service 'units' does not exit on node apenella]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools)[0] End of task has been notified for 'forth']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::AddService) Service 'units' added on node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterService::GetName) Get value 'units']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartCheckObjectTask) Exit status for 'eleventh': 3]
[2016-03-19 17:46:00  DEBUG: (ClusterService::AddNode) Add node 'apenella' to service 'units']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::IncreaseTimestamp) Node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) Creating a new ClusterMessage]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'eleventh']
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) *Cluster type arrived]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetData)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetFrom)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetTimestamp)]
[2016-03-19 17:46:00  INFO: (CheckObject::StartCheckObjectTask) [2016-03-19 17:46:44.890413334 +0100 CET] New sample generated for 'eleventh' at time '0']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) New message ready to be sent]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::SendData)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::StartReceiver) Received]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::sendSample)[0] Send sample for 'eleventh' check with exit '-1']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetCluster) Get value '{"nodes":{"apenella":{"name":"apenella","URL":"http://0.0.0.0:5497","timestamp":1,"service":null,"services":{"units":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false},"apenella1":{"name":"apenella1","URL":"http://0.0.0.0:15497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella12":{"name":"apenella12","URL":"http://2.2.2.2:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false}},"services":{"units":{"name":"units","nodes":{"apenella":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false}}}']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetSampleEngine)]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetNode) Retrieve node 'apenella' from cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetService) Retrieve service 'apenella' from cluster]
[2016-03-19 17:46:00  DEBUG: (SampleEngine::GetSample) 'eleventh']
[2016-03-19 17:46:00  DEBUG: (Cluster::GetService) Service 'apenella' does not exit on the cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (SampleEngine::GetSample) There is not a sample for the check 'eleventh']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) Create new service 'apenella' on cluster node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterService::NewClusterService)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (ClusterService::SetName) Set value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterService::SetCandidateForDelation)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::GetoutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::AddService) Add service 'apenella' to cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::AddService) Add service 'apenella' to cluster]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels) [0] Writing sample 'eleventh' with exit '-1' into channel]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) ServiceObject received[node:apenella, service:apenella, service timestamp:2, numchecks:5]]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels) [0] Writing sample 'eleventh' with exit '-1' into channel]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) New sample received for 'eleventh']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) Sample for 'eleventh' belongs to 'dozens']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) apenella]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask finished. The exit code for 'eleventh' is '-1']
[2016-03-19 17:46:00  DEBUG: (SampleEngine::StartSampleReceiver) New sample received for 'eleventh']
[2016-03-19 17:46:00  DEBUG: (SampleEngine::AddSample) [0]' eleventh']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) Sample for 'eleventh' belongs to 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SendToSampleChannel) New sample to send for 'eleventh' to service 'dozens']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::sampleExpiration) Countdown for eleventh's sample]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::scheduleCheckTask) Scheduling a new task for 'eleventh'. It will be launched 30s latter.]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'eleventh': '-1']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) Service 'apenella' does not exit on node apenella]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) New sample arrived for 'eleventh' to service 'dozens']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) The 'eleventh' status has changed, and service status have to be calculated.]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SendToSampleChannel) New sample to send for 'eleventh' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools)[0] End of task has been notified for 'eleventh']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Calculating 'eleventh' status to service 'dozens']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) Add new service 'apenella' on cluster node 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::StartCheckEngine) All Pools Finished]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) New sample arrived for 'eleventh' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) The 'eleventh' status has changed, and service status have to be calculated.]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Calculating 'eleventh' status to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::AddService) Add service 'apenella' on node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::CalculateStatusForService) Service 'apenella' has changed its status to 'ERROR']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) apenella]
[2016-03-19 17:46:00  DEBUG: (Environment::GetServiceEngine)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus)]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::GetOutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) Service 'apenella' does not exit on node apenella]
[2016-03-19 17:46:00  DEBUG: (Environment::GetServiceEngine)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus)]
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus) [1] Writing service status 'dozens' with status '-1' into channel]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::GetOutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::AddService) Service 'apenella' added on node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::sendServicesStatus) [3] Writing service status 'apenella' with status '2' into channel]
[2016-03-19 17:46:00  DEBUG: (ClusterService::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterService::AddNode) Add node 'apenella' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::IncreaseTimestamp) Node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) Creating a new ClusterMessage]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) *Cluster type arrived]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetData)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetFrom)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) New message ready to be sent]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::SendData)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::StartReceiver) Received]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) Sample for eleventh has expired]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetCluster) Get value '{"nodes":{"apenella":{"name":"apenella","URL":"http://0.0.0.0:5497","timestamp":2,"service":null,"services":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3},"units":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false},"apenella1":{"name":"apenella1","URL":"http://0.0.0.0:15497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella12":{"name":"apenella12","URL":"http://2.2.2.2:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false}},"services":{"apenella":{"name":"apenella","nodes":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3}},"candidatefordeletion":false},"units":{"name":"units","nodes":{"apenella":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false}}}']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetNode) Retrieve node 'apenella' from cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetService) Retrieve service 'apenella' from cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) ServiceObject received[node:apenella, service:apenella, service timestamp:3, numchecks:5]]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) apenella]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) Update service 'apenella' on cluster node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::AddService) Add service 'apenella' on node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) apenella]
[2016-03-19 17:46:00  DEBUG: (ClusterService::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterService::AddNode) Add node 'apenella' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::IncreaseTimestamp) Node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) Creating a new ClusterMessage]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) *Cluster type arrived]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetData)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetFrom)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) New message ready to be sent]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::SendData)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::StartReceiver) Received]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetCluster) Get value '{"nodes":{"apenella":{"name":"apenella","URL":"http://0.0.0.0:5497","timestamp":3,"service":null,"services":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3},"units":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false},"apenella1":{"name":"apenella1","URL":"http://0.0.0.0:15497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella12":{"name":"apenella12","URL":"http://2.2.2.2:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false}},"services":{"apenella":{"name":"apenella","nodes":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3}},"candidatefordeletion":false},"units":{"name":"units","nodes":{"apenella":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false}}}']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetNode) Retrieve node 'apenella' from cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetService) Retrieve service 'units' from cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) ServiceObject received[node:apenella, service:units, service timestamp:2, numchecks:4]]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) units]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) Update service 'units' on cluster node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::AddService) Add service 'units' on node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) units]
[2016-03-19 17:46:00  DEBUG: (ClusterService::GetName) Get value 'units']
[2016-03-19 17:46:00  DEBUG: (ClusterService::AddNode) Add node 'apenella' to service 'units']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::IncreaseTimestamp) Node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) Creating a new ClusterMessage]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) *Cluster type arrived]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetData)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetFrom)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) New message ready to be sent]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::SendData)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::StartReceiver) Received]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetCluster) Get value '{"nodes":{"apenella":{"name":"apenella","URL":"http://0.0.0.0:5497","timestamp":4,"service":null,"services":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3},"units":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false},"apenella1":{"name":"apenella1","URL":"http://0.0.0.0:15497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella12":{"name":"apenella12","URL":"http://2.2.2.2:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false}},"services":{"apenella":{"name":"apenella","nodes":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3}},"candidatefordeletion":false},"units":{"name":"units","nodes":{"apenella":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false}}}']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetNode) Retrieve node 'apenella' from cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetService) Retrieve service 'dozens' from cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetService) Service 'dozens' does not exit on the cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) Create new service 'dozens' on cluster node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterService::NewClusterService)]
[2016-03-19 17:46:00  DEBUG: (ClusterService::SetName) Set value 'dozens']
[2016-03-19 17:46:00  DEBUG: (ClusterService::SetCandidateForDelation)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::AddService) Add service 'dozens' to cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::AddService) Add service 'dozens' to cluster]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) ServiceObject received[node:apenella, service:dozens, service timestamp:1, numchecks:1]]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) dozens]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) Service 'dozens' does not exit on node apenella]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) Add new service 'dozens' on cluster node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::AddService) Add service 'dozens' on node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) dozens]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) Service 'dozens' does not exit on node apenella]
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::AddService) Service 'dozens' added on node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterService::GetName) Get value 'dozens']
[2016-03-19 17:46:00  DEBUG: (ClusterService::AddNode) Add node 'apenella' to service 'dozens']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::IncreaseTimestamp) Node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) Creating a new ClusterMessage]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) *Cluster type arrived]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetData)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetFrom)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (UI::server::NewUI) New UI listening at: 0.0.0.0:5497]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) New message ready to be sent]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::SendData)]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::GetRoutes)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::StartReceiver) Received]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoutes)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetCluster) Get value '{"nodes":{"apenella":{"name":"apenella","URL":"http://0.0.0.0:5497","timestamp":5,"service":null,"services":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3},"dozens":{"name":"dozens","description":"Numbers from 10-99","checks":["eleventh"],"status":-1,"timestamp":1},"units":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false},"apenella1":{"name":"apenella1","URL":"http://0.0.0.0:15497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella12":{"name":"apenella12","URL":"http://2.2.2.2:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false}},"services":{"apenella":{"name":"apenella","nodes":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3}},"candidatefordeletion":false},"dozens":{"name":"dozens","nodes":{"apenella":{"name":"dozens","description":"Numbers from 10-99","checks":["eleventh"],"status":-1,"timestamp":1}},"candidatefordeletion":false},"units":{"name":"units","nodes":{"apenella":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false}}}']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'Index']
[2016-03-19 17:46:00  DEBUG: (Cluster::GetNode) Retrieve node 'apenella' from cluster]
[2016-03-19 17:46:00  DEBUG: (Cluster::GetService) Retrieve service 'apenella' from cluster]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'allchecks']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) ServiceObject received[node:apenella, service:apenella, service timestamp:3, numchecks:5]]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'check']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) apenella]
[2016-03-19 17:46:00  DEBUG: (ServiceObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'allservices']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) Update service 'apenella' on cluster node 'apenella']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'service']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::AddService) Add service 'apenella' on node 'apenella']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'allservices']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::HasService) apenella]
[2016-03-19 17:46:00  DEBUG: (ClusterService::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'service']
[2016-03-19 17:46:00  DEBUG: (ClusterService::AddNode) Add node 'apenella' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::GetName) Get value 'apenella']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'NodeStatus']
[2016-03-19 17:46:00  DEBUG: (ClusterNode::IncreaseTimestamp) Node 'apenella']
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) Creating a new ClusterMessage]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'NodeStatus']
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::NewClusterMessage) *Cluster type arrived]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetData)]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'StartCheckEngine']
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetFrom)]
[2016-03-19 17:46:00  DEBUG: (ClusterMessage::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'allchecks']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::handleServiceObject) New message ready to be sent]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::SendData)]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'check']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'allservices']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'service']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'allservices']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'service']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'allchecks']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'allchecks']
[2016-03-19 17:46:00  DEBUG: (UI::server::StartUI) Starting UI listening at: 0.0.0.0:5497]
[2016-03-19 17:46:00  DEBUG: (UI::router::GenerateRoutes)]
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'Index']
[2016-03-19 17:46:00  DEBUG: (UI::router::AddRoute) Route name 'WebUI']
[2016-03-19 17:46:00  DEBUG: (UI::handler::WebUI)]
[2016-03-19 17:46:00  DEBUG: (UI::server::GetUI) Get UI listening at: 0.0.0.0:5497]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::apiWriter) clousure]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::GetClusterInfo)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetClusterEngine)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetClusterData)]
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetCluster) Get value '{"nodes":{"apenella":{"name":"apenella","URL":"http://0.0.0.0:5497","timestamp":6,"service":null,"services":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3},"dozens":{"name":"dozens","description":"Numbers from 10-99","checks":["eleventh"],"status":-1,"timestamp":1},"units":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false},"apenella1":{"name":"apenella1","URL":"http://0.0.0.0:15497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella12":{"name":"apenella12","URL":"http://2.2.2.2:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false}},"services":{"apenella":{"name":"apenella","nodes":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3}},"candidatefordeletion":false},"dozens":{"name":"dozens","nodes":{"apenella":{"name":"dozens","description":"Numbers from 10-99","checks":["eleventh"],"status":-1,"timestamp":1}},"candidatefordeletion":false},"units":{"name":"units","nodes":{"apenella":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false}}}']
[2016-03-19 17:46:00  DEBUG: (ClusterEngine::GetCluster) Get value '{"nodes":{"apenella":{"name":"apenella","URL":"http://0.0.0.0:5497","timestamp":6,"service":null,"services":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3},"dozens":{"name":"dozens","description":"Numbers from 10-99","checks":["eleventh"],"status":-1,"timestamp":1},"units":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false},"apenella1":{"name":"apenella1","URL":"http://0.0.0.0:15497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false},"apenella12":{"name":"apenella12","URL":"http://2.2.2.2:5497","timestamp":0,"service":null,"services":{},"candidatefordeletion":false}},"services":{"apenella":{"name":"apenella","nodes":{"apenella":{"name":"apenella","description":"Global services for node apenella","checks":["third","forth","eleventh","first","second"],"status":2,"timestamp":3}},"candidatefordeletion":false},"dozens":{"name":"dozens","nodes":{"apenella":{"name":"dozens","description":"Numbers from 10-99","checks":["eleventh"],"status":-1,"timestamp":1}},"candidatefordeletion":false},"units":{"name":"units","nodes":{"apenella":{"name":"units","description":"Numbers from 0-9","checks":["first","second","third","forth"],"status":2,"timestamp":2}},"candidatefordeletion":false}}}']
[2016-03-19 17:46:00  DEBUG: (ApiEngine::apiWriter) clousure]
[2016-03-19 17:46:00  DEBUG: (ApiEngine::GetNodeInfo)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetNodeInfo)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetSampleEngine)]
[2016-03-19 17:46:00  DEBUG: (Environment::GetServiceEngine)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::SetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) Sample for second has expired]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::StartCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::StartCheckEngine) Starting the check '{"name":"second","description":"The number two","command":"./conf.d/scripts/random.sh 4 second","depend":null,"expirationTime":15,"interval":15,"timestamp":1}']
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) Ready to start all pools for checks]
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) Initializing tasks for 'second''s pool]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Initializing the tasks for the check 'second']
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools) waiting for tasks 1 to be finished]
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) The check 'second' hasn't dependencies]
[2016-03-19 17:46:00  DEBUG: (CheckObject::EnqueueCheckObject) Enqueing CheckObject 'second']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask started. The check'second' has not a sample]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartCheckObjectTask) Running a check: second]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartCheckObjectTask) Exit status for 'second': 2]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  DEBUG: (CheckObject::GenerateCheckSample) CheckSample for 'second']
[2016-03-19 17:46:00  DEBUG: (CheckObject::GetTimestamp)]
[2016-03-19 17:46:00  INFO: (CheckObject::StartCheckObjectTask) [2016-03-19 17:46:59.868403572 +0100 CET] New sample generated for 'second' at time '1']
[2016-03-19 17:46:00  DEBUG: (Environment::GetCheckEngine)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::sendSample)[1] Send sample for 'second' check with exit '2']
[2016-03-19 17:46:00  DEBUG: (Environment::GetSampleEngine)]
[2016-03-19 17:46:00  DEBUG: (SampleEngine::GetSample) 'second']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels)]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::GetoutputChannels) Get value]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels) [1] Writing sample 'second' with exit '2' into channel]
[2016-03-19 17:46:00  DEBUG: (CheckEngine::writeToOutputChannels) [1] Writing sample 'second' with exit '2' into channel]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue) ObjectTask finished. The exit code for 'second' is '2']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) New sample received for 'second']
[2016-03-19 17:46:00  DEBUG: (SampleEngine::StartSampleReceiver) New sample received for 'second']
[2016-03-19 17:46:00  DEBUG: (SampleEngine::AddSample) [1]' second']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) Sample for 'second' belongs to 'apenella']
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::sampleExpiration) Countdown for second's sample]
[2016-03-19 17:46:00  DEBUG: (CheckObject::StartQueue::scheduleCheckTask) Scheduling a new task for 'second'. It will be launched 15s latter.]
[2016-03-19 17:46:00  DEBUG: (Checks::InitCheckTasks) Received a check status for 'second': '2']
[2016-03-19 17:46:00  DEBUG: (ServiceEngine::StartReceiver) Sample for 'second' belongs to 'units']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SendToSampleChannel) New sample to send for 'second' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) New sample arrived for 'second' to service 'apenella']
[2016-03-19 17:46:00  DEBUG: (Checks::StartCheckTaskPools)[1] End of task has been notified for 'second']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::SendToSampleChannel) New sample to send for 'second' to service 'units']
[2016-03-19 17:46:00  DEBUG: (ServiceObject::StartServiceObjectCheckSampleInput) New sample arrived for 'second' to service 'units']
[2016-03-19 17:46:00  DEBUG: (CheckEngine::StartCheckEngine) All Pools Finished]
